public class Main {
    static final FridayAlarm alarm = new FridayAlarm();

    public static void main(String[] args) {
        System.out.println("Задача 1");
        task1();

        System.out.println("\nЗадача 2");
        task2();

        System.out.println("\nЗадача 3");
        task3();

        System.out.println("\nЗадача 4");
        task4();

        System.out.println("\nЗадача 5");
        task5();

        System.out.println("\nЗадача 6");
        task6();

        System.out.println("\nЗадача 7");
        task7();
        alarm.fridayReportAlarm(); //Развлечения. По шкале от 0 до 10, насколько это криво?

        System.out.println("\nЗадача 8");
        task8();
    }

    //Задача 1
    //Продолжите работать с кодом, который вы написали в предыдущем уроке — в задачах с накоплениями.
    //С помощью цикла while посчитайте, сколько месяцев потребуется, чтобы накопить 2 459 000 рублей при условии, что
    //первоначально мы имеем 0 рублей и готовы откладывать по 15 тысяч рублей.
    //Результат программы должен быть выведен в консоль с тем количеством месяцев, которое необходимо для накопления
    //данной суммы. Формат сообщения: «Месяц …, сумма накоплений равна … рублей» .
    public static void task1() {
        int target = 2_459_000;
        int savings = 0;
        int increment = 15_000;
        int counter = 0;
        while (savings < target) {
            counter++;
            savings += increment;
            System.out.printf("Месяц %d, сумма накоплений равна %d рублей\n", counter, savings);
        }
        System.out.printf("Для достижения указанной суммы потребовалось %d месяцев\n", counter);
    }

    //Задача 2
    //Выведите в одну строку через пробел числа от 1 до 10 с помощью цикла while.
    //На следующей строке выведите числа в обратном порядке от 10 до 1 с помощью цикла for.
    //Для обоих циклов можно использовать как одну общую переменную, так и в каждом цикле свою.
    //Не забудьте выполнить переход на новую строку между двумя циклами.
    //В результате программы вывод должен получиться следующий:
    //1 2 3 4 5 6 7 8 9 10
    //10 9 8 7 6 5 4 3 2 1
    public static void task2() {
        int counter = 0;
        int turnAroundPoint = 10;
        int target = 1;
        while (counter < turnAroundPoint) {
            System.out.print(++counter + "\t");
        }
        System.out.println();
        for (; counter >= target; counter--) {
            System.out.print(counter + "\t");
        }
        System.out.println();
    }

    //Задача 3
    //В стране Y население равно 12 миллионов человек.
    //Рождаемость составляет 17 человек на 1000, смертность — 8 человек. Рассчитайте, какая численность населения будет
    //через 10 лет, если показатели рождаемости и смертности постоянны.
    //В консоль выведите результат операции на каждый год в формате: «Год …, численность населения составляет …».
    public static void task3() {
        int population = 12_000_000;
        float birthRate = (float) 17 / 1000;
        float deathRate = (float) 8 / 1000;
        int limit = 10;
        for (int i = 0; i < limit; i++) {
            int delta = (int) (population * (birthRate - deathRate));
            population += delta;
            System.out.printf("Год %d, численность населения составляет %d\n", i + 1, population);
        }
    }

    //Задача 4
    //Василий решил положить деньги на накопительный счет, где каждый месяц к сумме его вклада добавляется еще 7%.
    //Первоначальная сумма вклада — 15 тысяч рублей.
    //Вычислите и выведите в консоль, сколько месяцев Василию нужно будет копить, чтобы собрать сумму в 12 миллионов
    //рублей при условии, что процент банка от накоплений не меняется, а всегда равен 7%.
    //Выведите в консоль результат программы с указанием суммы накоплений по каждому месяцу.
    public static void task4() {
        float money = 15000f;
        int target = 12_000_000;
        float interestRate = 1.07f;
        int counter = 0;
        while (money < target) {
            counter++;
            money *= interestRate;
            System.out.printf("Прошло месяцев: %d. Сумма на счете: %.2f\n", counter, money);
        }
    }

    //Задача 5
    //Видоизмените программу таким образом, чтобы в консоль выводились не все месяцы подряд, а только каждый шестой.
    //Должны быть видны накопления за 6, 12, 18, 24-й и следующие месяцы.
    public static void task5() {
        float money = 15000f;
        int target = 12_000_000;
        float interestRate = 1.07f;
        int counter = 0;
        int evaluationPeriod = 6;

        while (money < target) {
            counter++;
            money *= interestRate;
            if (counter % evaluationPeriod == 0) {
                System.out.printf("Прошло месяцев: %d. Сумма на счете: %.2f\n", counter, money);
            }
        }
        System.out.printf("Для досижения указанной суммы потребовалось %d месяцев\n", counter);
    }

    //Задача 6
    //Василий решил, что будет копить деньги ближайшие 9 лет. Он хочет знать, какой будет сумма его накоплений каждые
    //полгода на протяжении этих 9 лет.
    //Исходная сумма всё та же — 15 тысяч рублей, проценты банка – 7% ежемесячно.
    //Напишите программу, которая будет выводить сумму накоплений за каждые полгода в течение 9 лет.
    public static void task6() {
        float money = 15000f;
        float interestRate = 1.07f;
        int counter = 0;
        int evaluationPeriod = 6;
        int months = 12 * 9;

        while (counter < months) {
            counter++;
            money *= interestRate;
            if (counter % evaluationPeriod == 0) {
                System.out.printf("Прошло месяцев: %d. Сумма на счете: %.2f\n", counter, money);
            }
        }
        System.out.printf("Прошло %d месяцевюю Сумма на счете составляет %.2f\n", counter, money);
    }

    //Задача 7
    //В компании пятница — отчетный день.
    //Нужно написать программу, которая считает дни месяца по датам, определяет, какой день пятница, и выводит сообщение
    //с напоминанием, что нужно подготовить еженедельный отчет.
    //Создайте переменную типа int, которая хранит в себе номер первой пятницы месяца (число от 1 до 7).
    //Выведите на каждую пятницу месяца (включая полученную) сообщение следующего вида: «Сегодня пятница, ...-е число.
    //Необходимо подготовить отчет».
    //В нашем месяце 31 день. В результате у вас должно получиться от 4 до 5 сообщений с напоминаниями по разным датам.
    public static void task7() {
        int firstFriday = 3;
        final int daysInMonth = 31;
        final int weekLength = 7;
        for (int i = 1; i <= daysInMonth; i++) {
            if ((i - firstFriday) % weekLength == 0) {
                System.out.printf("Сегодня пятница, %d-е. Необходимо подготовить отчет\n", i);
            }
        }
    }

    //Задача 8
    //Нам нужно написать астрономическое приложение, которое считает, когда над Землей пролетает комета.
    //Известно, что комета пролетает каждый 79-й год, начиная с нулевого.
    //В консоль нужно вывести все годы за последние 200 лет, когда появлялась комета, а также следующий год ее появления
    //(ближайшие 100 лет).
    //Для вычисления периода можно создать две дополнительные переменные, которые содержат год за 200 лет до текущего
    //(из созданной ранее переменной) в качестве старта и 100 лет после в качестве завершения периода расчета.
    //В результате решения задачи в консоли должен получиться следующий результат:
    //1896
    //1975
    //2054
    public static void task8() {
        int currentYear = 2023;
        int pastLimit = 200;
        int futureLimit = 100;
        int period = 79;
        for (int i = 0; i <= currentYear + futureLimit; i++) {
            if (i % period == 0 && i >= (currentYear - pastLimit)) {
                System.out.println(i);
            }
        }
    }
}